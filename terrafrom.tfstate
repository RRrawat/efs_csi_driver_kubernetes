{
  "version": 4,
  "terraform_version": "1.0.9",
  "serial": 110,
  "lineage": "8c5eb6e4-50d2-19d0-fdc3-86c143c98866",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-east-1:996656702859:cluster/test_cluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1USXlOekE1TlRFd05sb1hEVE14TVRJeU5UQTVOVEV3Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGVpCkhUQmVuc2gvSkJSN0ErcG5sWkhWTThlMDhJR1Q2MEdEaXZXMUpCWmVyQUIyM25aRVJPV2Q4dVp6MjRsUHJaOGoKVTNXNWFndmZFcHBKY2JwcFRCMUVOaEFNc0d0akFydnRiYm9xZkFIc285MHV5SkFIRHNvY21LeUdGdzdUSkFlQgpLd1pIZ2IvN0llVkF4RGxtbnZiSkxVWkZQT3JOZmRjQVY0RHhqZk15QUlpamlSZ3NQK0YwUDFzY29IaVl1U0hsClpqR0l3ZFZkVERud2l5Z2t5eUZMUnV1bXViWkhEQlpyeVJaM1pRZjZPakR4YXlpNzRXU2xEOXVuRk1qemlDTmIKYklZQmRmWm4vS09ZMjZ4MjJjMExFQldWWncxU1VqYWhVWU9tdXYrQjZFRk01elljcGtyK3Z4c1BNbDhBTUpGcgpHSHZLY3RqKy9JVWZtWFplT2ZNQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZLWldyVkNHQkJ3R0FaempDZkNzUFdnaVlrNDFNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDRTRzdklhMWJCV1ZuRlFyeDZrNzVjQmE5Rk1yejdqVkh2QmdnOHRPWmIzbytHenowcQpvTkVZN2NMVTJOQUhOR3NaNnpuU1pCU0o5d0hKOURxbmhVZ3hsSDBkc3J1S2JUNGU3K3BJM3I1K3Q2R2VnRXF3CmhqbDRBVnErek00QVpJc2RISkNJU2RVWEs0WTg2czRZK01uaXhGUS9jcmJrMzdLV2VLU3p5TlNVQTdZdDI2TmwKOEhxc1hINjZYVFR1T0lpemtpUHd3MWNIRUJqRHpUR3ZlQUZNSmcvMEh2Z1hvWWRmMEwybm5pSTZFcm5ZeFMydAp6WjFXRVdOOHIyTDJnNXc1eU5FNTFyRVkxQmM3ZEtlZ0E0c3MvREdraDhlVmhUeFlxZnBjM3p0OXBWdmQ2M1FZCk1HemZoS1FZTHlOUVlucTFBaEJLN0JYYm1oNE9Za0tpdXcvOAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "created_at": "2021-12-27 09:44:34.616 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://DFFF2D8199DEE2A47798EDE933255894.gr7.us-east-1.eks.amazonaws.com",
            "id": "test_cluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/DFFF2D8199DEE2A47798EDE933255894"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "10.100.0.0/16"
              }
            ],
            "name": "test_cluster",
            "platform_version": "eks.4",
            "role_arn": "arn:aws:iam::996656702859:role/test_cluster-eks-cluster-role",
            "status": "ACTIVE",
            "tags": {
              "Application": "test",
              "Creater": "CloudBuilders",
              "Enviroment": "test",
              "Name": "test",
              "Support": "Cloudbuilders"
            },
            "version": "1.21",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0373dbfb673733832",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [],
                "subnet_ids": [
                  "subnet-046e9325",
                  "subnet-2c5adc61"
                ],
                "vpc_id": "vpc-c25e5cb8"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "test_cluster",
            "name": "test_cluster",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUE2UURLNk1XRlVKTkNPV09VJTJGMjAyMTEyMjclMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIxMTIyN1QxMTE4NTdaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPTJiMmE4NDJlOTYzMmIzNTYxNTJiZjYwZTcwNWI3YmFlNGQxYjliNTIyYTlhZGFmZDk3MzQ5YjM5ZTU0ZWZiNWI"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "efs_csi_driver",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "346826460",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticfilesystem:DescribeMountTargets\",\n        \"elasticfilesystem:DescribeFileSystems\",\n        \"elasticfilesystem:DescribeAccessPoints\",\n        \"ec2:DescribeAvailabilityZones\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticfilesystem:CreateAccessPoint\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/efs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticfilesystem:DeleteAccessPoint\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:ResourceTag/efs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:DescribeAvailabilityZones",
                  "elasticfilesystem:DescribeAccessPoints",
                  "elasticfilesystem:DescribeFileSystems",
                  "elasticfilesystem:DescribeMountTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticfilesystem:CreateAccessPoint"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/efs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticfilesystem:DeleteAccessPoint"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:ResourceTag/efs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "efs_csi_driver_assume",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2566910303",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::996656702859:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/DFFF2D8199DEE2A47798EDE933255894\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-east-1.amazonaws.com/id/DFFF2D8199DEE2A47798EDE933255894:sub\": \"system:serviceaccount:efs-csi-driver-service-account\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:efs-csi-driver-service-account"
                    ],
                    "variable": "oidc.eks.us-east-1.amazonaws.com/id/DFFF2D8199DEE2A47798EDE933255894:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::996656702859:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/DFFF2D8199DEE2A47798EDE933255894"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "kubernetes_efs_csi_driver",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "bbc6b68fc55ffca1e7b7b2d4591cb099719889331562f30be889c38dc3a9dd4c",
            "rendered": "# Default values for aws-efs-csi-driver.\r\n# This is a YAML-formatted file.\r\n# Declare variables to be passed into your templates.\r\n\r\nnameOverride: \"\"\r\nfullnameOverride: \"\"\r\n\r\nreplicaCount: 2\r\n\r\nimage:\r\n  repository: amazon/aws-efs-csi-driver\r\n  tag: \"v1.3.5\"\r\n  pullPolicy: IfNotPresent\r\n\r\nsidecars:\r\n  livenessProbe:\r\n    image:\r\n      repository: public.ecr.aws/eks-distro/kubernetes-csi/livenessprobe\r\n      tag: v2.2.0-eks-1-18-2\r\n      pullPolicy: IfNotPresent\r\n    resources: {}\r\n  nodeDriverRegistrar:\r\n    image:\r\n      repository: public.ecr.aws/eks-distro/kubernetes-csi/node-driver-registrar\r\n      tag: v2.1.0-eks-1-18-2\r\n      pullPolicy: IfNotPresent\r\n    resources: {}\r\n  csiProvisioner:\r\n    image:\r\n      repository: public.ecr.aws/eks-distro/kubernetes-csi/external-provisioner\r\n      tag: v2.1.1-eks-1-18-2\r\n      pullPolicy: IfNotPresent\r\n    resources: {}\r\n\r\nimagePullSecrets: []\r\n\r\n## Controller deployment variables\r\n\r\ncontroller:\r\n  # Specifies whether a deployment should be created\r\n  create: true\r\n  # Number for the log level verbosity\r\n  logLevel: 2\r\n  # If set, add pv/pvc metadata to plugin create requests as parameters.\r\n  extraCreateMetadata: true\r\n  # Add additional tags to access points\r\n  tags:\r\n    {}\r\n    # environment: prod\r\n    # region: us-east-1\r\n  # Enable if you want the controller to also delete the\r\n  # path on efs when deleteing an access point\r\n  deleteAccessPointRootDir: false\r\n  podAnnotations: {}\r\n  resources:\r\n    {}\r\n    # We usually recommend not to specify default resources and to leave this as a conscious\r\n    # choice for the user. This also increases chances charts run on environments with little\r\n    # resources, such as Minikube. If you do want to specify resources, uncomment the following\r\n    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\r\n    # limits:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n    # requests:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n  nodeSelector: {}\r\n  tolerations: []\r\n  affinity: {}\r\n  # Specifies whether a service account should be created\r\n  serviceAccount:\r\n    create: true\r\n    name: efs-csi-controller-sa\r\n    annotations: {}\r\n    ## Enable if EKS IAM for SA is used\r\n    #  eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/efs-csi-role\r\n  healthPort: 9909\r\n\r\n## Node daemonset variables\r\n\r\nnode:\r\n  # Number for the log level verbosity\r\n  logLevel: 2\r\n  hostAliases:\r\n    {}\r\n    # For cross VPC EFS, you need to poison or overwrite the DNS for the efs volume as per\r\n    # https://docs.aws.amazon.com/efs/latest/ug/efs-different-vpc.html#wt6-efs-utils-step3\r\n    # implementing the suggested solution found here:\r\n    # https://github.com/kubernetes-sigs/aws-efs-csi-driver/issues/240#issuecomment-676849346\r\n    # EFS Vol ID, IP, Region\r\n    # \"fs-01234567\":\r\n    #   ip: 10.10.2.2\r\n    #   region: us-east-2\r\n  dnsPolicy: ClusterFirst\r\n  dnsConfig:\r\n    {}\r\n    # Example config which uses the AWS nameservers\r\n    # dnsPolicy: \"None\"\r\n    # dnsConfig:\r\n    #   nameservers:\r\n    #     - 169.254.169.253\r\n  podAnnotations: {}\r\n  resources:\r\n    {}\r\n    # limits:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n    # requests:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n  nodeSelector: {}\r\n  tolerations:\r\n    - operator: Exists\r\n  # Specifies whether a service account should be created\r\n  serviceAccount:\r\n    create: true\r\n    name: efs-csi-node-sa\r\n    annotations: {}\r\n    ## Enable if EKS IAM for SA is used\r\n    #  eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/efs-csi-role\r\n  healthPort: 9809\r\n\r\nstorageClasses: []\r\n# Add StorageClass resources like:\r\n# - name: efs-sc\r\n#   annotations:\r\n#     # Use that annotation if you want this to your default storageclass\r\n#     storageclass.kubernetes.io/is-default-class: \"true\"\r\n#   mountOptions:\r\n#   - tls\r\n#   parameters:\r\n#     provisioningMode: efs-ap\r\n#     fileSystemId: fs-1122aabb\r\n#     directoryPerms: \"700\"\r\n#     gidRangeStart: \"1000\"\r\n#     gidRangeEnd: \"2000\"\r\n#     basePath: \"/dynamic_provisioning\"\r\n#   reclaimPolicy: Delete\r\n#   volumeBindingMode: Immediate\r\n",
            "template": "# Default values for aws-efs-csi-driver.\r\n# This is a YAML-formatted file.\r\n# Declare variables to be passed into your templates.\r\n\r\nnameOverride: \"\"\r\nfullnameOverride: \"\"\r\n\r\nreplicaCount: 2\r\n\r\nimage:\r\n  repository: amazon/aws-efs-csi-driver\r\n  tag: \"v1.3.5\"\r\n  pullPolicy: IfNotPresent\r\n\r\nsidecars:\r\n  livenessProbe:\r\n    image:\r\n      repository: public.ecr.aws/eks-distro/kubernetes-csi/livenessprobe\r\n      tag: v2.2.0-eks-1-18-2\r\n      pullPolicy: IfNotPresent\r\n    resources: {}\r\n  nodeDriverRegistrar:\r\n    image:\r\n      repository: public.ecr.aws/eks-distro/kubernetes-csi/node-driver-registrar\r\n      tag: v2.1.0-eks-1-18-2\r\n      pullPolicy: IfNotPresent\r\n    resources: {}\r\n  csiProvisioner:\r\n    image:\r\n      repository: public.ecr.aws/eks-distro/kubernetes-csi/external-provisioner\r\n      tag: v2.1.1-eks-1-18-2\r\n      pullPolicy: IfNotPresent\r\n    resources: {}\r\n\r\nimagePullSecrets: []\r\n\r\n## Controller deployment variables\r\n\r\ncontroller:\r\n  # Specifies whether a deployment should be created\r\n  create: true\r\n  # Number for the log level verbosity\r\n  logLevel: 2\r\n  # If set, add pv/pvc metadata to plugin create requests as parameters.\r\n  extraCreateMetadata: true\r\n  # Add additional tags to access points\r\n  tags:\r\n    {}\r\n    # environment: prod\r\n    # region: us-east-1\r\n  # Enable if you want the controller to also delete the\r\n  # path on efs when deleteing an access point\r\n  deleteAccessPointRootDir: false\r\n  podAnnotations: {}\r\n  resources:\r\n    {}\r\n    # We usually recommend not to specify default resources and to leave this as a conscious\r\n    # choice for the user. This also increases chances charts run on environments with little\r\n    # resources, such as Minikube. If you do want to specify resources, uncomment the following\r\n    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\r\n    # limits:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n    # requests:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n  nodeSelector: {}\r\n  tolerations: []\r\n  affinity: {}\r\n  # Specifies whether a service account should be created\r\n  serviceAccount:\r\n    create: true\r\n    name: efs-csi-controller-sa\r\n    annotations: {}\r\n    ## Enable if EKS IAM for SA is used\r\n    #  eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/efs-csi-role\r\n  healthPort: 9909\r\n\r\n## Node daemonset variables\r\n\r\nnode:\r\n  # Number for the log level verbosity\r\n  logLevel: 2\r\n  hostAliases:\r\n    {}\r\n    # For cross VPC EFS, you need to poison or overwrite the DNS for the efs volume as per\r\n    # https://docs.aws.amazon.com/efs/latest/ug/efs-different-vpc.html#wt6-efs-utils-step3\r\n    # implementing the suggested solution found here:\r\n    # https://github.com/kubernetes-sigs/aws-efs-csi-driver/issues/240#issuecomment-676849346\r\n    # EFS Vol ID, IP, Region\r\n    # \"fs-01234567\":\r\n    #   ip: 10.10.2.2\r\n    #   region: us-east-2\r\n  dnsPolicy: ClusterFirst\r\n  dnsConfig:\r\n    {}\r\n    # Example config which uses the AWS nameservers\r\n    # dnsPolicy: \"None\"\r\n    # dnsConfig:\r\n    #   nameservers:\r\n    #     - 169.254.169.253\r\n  podAnnotations: {}\r\n  resources:\r\n    {}\r\n    # limits:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n    # requests:\r\n    #   cpu: 100m\r\n    #   memory: 128Mi\r\n  nodeSelector: {}\r\n  tolerations:\r\n    - operator: Exists\r\n  # Specifies whether a service account should be created\r\n  serviceAccount:\r\n    create: true\r\n    name: efs-csi-node-sa\r\n    annotations: {}\r\n    ## Enable if EKS IAM for SA is used\r\n    #  eks.amazonaws.com/role-arn: arn:aws:iam::111122223333:role/efs-csi-role\r\n  healthPort: 9809\r\n\r\nstorageClasses: []\r\n# Add StorageClass resources like:\r\n# - name: efs-sc\r\n#   annotations:\r\n#     # Use that annotation if you want this to your default storageclass\r\n#     storageclass.kubernetes.io/is-default-class: \"true\"\r\n#   mountOptions:\r\n#   - tls\r\n#   parameters:\r\n#     provisioningMode: efs-ap\r\n#     fileSystemId: fs-1122aabb\r\n#     directoryPerms: \"700\"\r\n#     gidRangeStart: \"1000\"\r\n#     gidRangeEnd: \"2000\"\r\n#     basePath: \"/dynamic_provisioning\"\r\n#   reclaimPolicy: Delete\r\n#   volumeBindingMode: Immediate\r\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "efs_csi_driver",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::996656702859:policy/test_cluster-efs-csi-driver",
            "description": "Policy for the EFS CSI driver",
            "id": "arn:aws:iam::996656702859:policy/test_cluster-efs-csi-driver",
            "name": "test_cluster-efs-csi-driver",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"elasticfilesystem:DescribeMountTargets\",\"elasticfilesystem:DescribeFileSystems\",\"elasticfilesystem:DescribeAccessPoints\",\"ec2:DescribeAvailabilityZones\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:CreateAccessPoint\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"elasticfilesystem:DeleteAccessPoint\",\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/efs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6QDK6MWF6ROKITRON",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.efs_csi_driver"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "efs_csi_driver",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::996656702859:role/test_cluster-efs-csi-driver",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::996656702859:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/DFFF2D8199DEE2A47798EDE933255894\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/DFFF2D8199DEE2A47798EDE933255894:sub\":\"system:serviceaccount:efs-csi-driver-service-account\"}}}]}",
            "create_date": "2021-12-27T11:17:40Z",
            "description": "",
            "force_detach_policies": false,
            "id": "test_cluster-efs-csi-driver",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::996656702859:policy/test_cluster-efs-csi-driver"
            ],
            "max_session_duration": 3600,
            "name": "test_cluster-efs-csi-driver",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6QDK6MWF5NQG4LML5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.efs_csi_driver_assume"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "efs_csi_driver",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "test_cluster-efs-csi-driver-20211227111746150800000001",
            "policy_arn": "arn:aws:iam::996656702859:policy/test_cluster-efs-csi-driver",
            "role": "test_cluster-efs-csi-driver"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.efs_csi_driver",
            "aws_iam_role.efs_csi_driver",
            "data.aws_iam_policy_document.efs_csi_driver",
            "data.aws_iam_policy_document.efs_csi_driver_assume"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "storage_class",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "kubernetes_efs_csi_driver",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "efs-csi-driver",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "efs-csi-driver",
                "resource_version": "11718",
                "uid": "9b5711d4-c124-49af-9574-60f033ee2b90"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster"
          ]
        }
      ]
    }
  ]
}
